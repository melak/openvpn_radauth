#!/bin/sh

t="./openvpn_radauth"
radius_conf="$( pwd )/test/radius.conf"

ok_username="okuser"
ok_password="okpass"
bad_username="baduser"
bad_password="badpass"
nonexistent_username="nouser"

success=0
failure=1

errors=0

: ${MAKE:=make}
${MAKE} distclean
[ -e ./configure ] || autoreconf -ivf
./configure --with-radius-config="${radius_conf}" --enable-debug
${MAKE}

test_via_env()
{
	username="$1"
	password="$2"
	exp=$3

	for ipparam in "" untrusted_ip="127.0.0.1"
	do
		env -i \
			username="${username}" \
			password="${password}" \
			${ipparam} \
		"${t}"
	done

	if [ $? -ne ${exp} ]
	then
		echo "via-env failed test username=[${username}] password=[${password}]"
	fi
}

test_via_file()
{
	username="$1"
	password="$2"
	exp=$3

	passfile="$( mktemp /tmp/${0##*/}.XXXXXX )"

	printf '%s\r\n' "${username}" > "${passfile}"
	printf '%s\r\n' "${password}" >> "${passfile}"

	for ipparam in "" untrusted_ip="127.0.0.1"
	do
		env -i \
			${ipparam} \
			"${t}" "${passfile}"
	done

	if [ $? -ne ${exp} ]
	then
		echo "via-file failed test username=[${username}] password=[${password}]"
		errors=$(( errors + 1 ))
	fi

	rm -f "${passfile}"
}

test()
{
	echo "testing username=[${1}] password=[${2}] via-file"
	test_via_file "$@"
	echo "testing username=[${1}] password=[${2}] via-env"
	test_via_env "$@"
}

if [ ! -x ${t} ]
then
	echo "test subject ${t} is awol"
	exit
fi
if [ ! -r ${radius_conf} ]
then
	echo "${radius_conf} is missing or unreadable"
	exit
fi

echo "started testing, watch authlog"

test "" "" ${failure}
test "" "${ok_password}" ${failure}
test "" "${bad_password}" ${failure}

test "${ok_username}" "" ${failure}
test "${ok_username}" "${bad_password}" ${failure}
test "${ok_username}" "${ok_password}" ${success}

test "${bad_username}" "" ${failure}
test "${bad_username}" "${bad_password}" ${failure}
test "${bad_username}" "${ok_password}" ${failure}

test "${nonexistent_username}" "" ${failure}
test "${nonexistent_username}" "${bad_password}" ${failure}
test "${nonexistent_username}" "${ok_password}" ${failure}

echo "finished testing"

${MAKE} clean

if [ ${errors} -eq 0 ]
then
	echo "all tests successful"

	exit 0
else
	echo "some tests failed"

	exit 1
fi
